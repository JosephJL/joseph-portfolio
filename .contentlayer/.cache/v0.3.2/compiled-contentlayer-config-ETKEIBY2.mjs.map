{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["// import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\n// export const Post = defineDocumentType(() => ({\n//   name: \"Post\",\n//   contentType: \"mdx\",\n//   filePathPattern: \"posts/*.mdx\",\n//   fields: {\n//     title: {\n//       type: \"string\",\n//       required: true,\n//     },\n//     description: {\n//       type: \"string\",\n//       required: true,\n//     },\n//   },\n//   computedFields: {\n//     slug: {\n//       type: \"string\",\n//       resolve: (post) =>\n//         post._raw.sourceFileName\n//           // hello-world.mdx => hello-world\n//           .replace(/\\.mdx$/, \"\"),\n//     },\n//   },\n// }));\n\n// export default makeSource({\n//   contentDirPath: \"content\",\n//   documentTypes: [Post],\n// });\n\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  contentType: \"mdx\",\n  filePathPattern: \"posts/*.mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n  },\n  computedFields: {\n    // slug: {\n    //   type: \"string\",\n    //   resolve: (post) =>\n    //     post._raw.sourceFileName\n    //       // hello-world.mdx => hello-world\n    //       .replace(/\\.mdx$/, \"\"),\n    // },\n    slug: {\n      type: \"string\",\n      resolve: (doc) => `${doc._raw.sourceFileName}`,\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Post],\n});\n"],
  "mappings": ";AAgCA,SAAS,oBAAoB,kBAAkB;AAE/C,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK;AAAA,IAChC;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AACtB,CAAC;",
  "names": []
}
